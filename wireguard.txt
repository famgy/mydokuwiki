<file>
1. 参考资料：https://zhuanlan.zhihu.com/p/472525876


2. 白皮书知识点

工作再第三层 ： 网络层
一轮交互，完成密钥交换
P2P协议：两端都称为Peer，使用 32字节的 公钥作为身份标识
Interface：wg虚拟网卡 （监听的端口+私钥）
Peer: 对端的公钥和ip地址
路由表：记录建立隧道的Peer信息（公钥、资源ip列表）
Endpoint：Peer端的Interface （公网ip + port），把一个包发给正确的Peer

* ECDH是一种密钥交换算法，允许协议双方在不安全的网络中协商出一个共享密钥

	共享密钥 ss = priv_i * pub_r = priv_r * pub_i    （ * 号 ：  椭圆曲线乘法）


* AEAD 认证加密算法：  （XAEAD 是指带 nonce 的 AEAD 算法）

	加密 + 签名     ==    认证  + 解密








+----------------------------------------------------------------+          +----------------------------------------------------------------+
|                                                                |          |                                                                |
|  +--------------------+      +--------------------+            |          |  +--------------------+      +--------------------+            |  +----------------+
|  |     Web Browser    |      |    wireguard-go    |<-----+     |          |  |                    |      |    wireguard-go    |<-----+     |  | server 1.1.1.1 |
|  +--------------------+      +--------------------+      |     |          |  +--------------------+      +--------------------+      |     |  +----------------+
|             | 1                        | 5               |     |          |                                        | 13              |     |          |
|.............|..........................|.................|.....|          |........................................|.................|.....|          |
|             |                          |                 |     |          |                                        |                 |     |          |
|       +----------+               +----------+            |     |          |       +----------+               +----------+            |     |          |
|       | socket A |               | socket B |            |     |          |       |          |               | socket C |            |     |          |
|       +----------+               +----------+            |     |          |       +----------+               +----------+            |     |          |
|             | 2                        | 6               |     |          |                                        | 14              |     |          |
|.............|..........................|..... ...........|.....|          |........................................|.................|.....|          |
|             |                          |                 |     |          |                                        |                 |     |          |
|        +-------------------------------------+         4 |     |          |        +-------------------------------------+        12 |     |          | 17
|        |       Network Protocol Stack        |           |     |          |        |       Network Protocol Stack        |           |     |          |
|        +-------------------------------------+           |     |          |        +-------------------------------------+           |     |          |
|             | 7                        | 3               |     |          |             | 10   | 15                | 11              |     |          |
|.............|......................... |.................|.....|          |.............|......|...................|.................|.....|          |
|             |                          |                 |     |          |             |      |                   |                 |     |          |
|        +----------------+    +----------------+          |     |          |        +----------------+    +----------------+          |     |          |
|        | eth0 10.1.1.1  |    |tun0 192.168.1.1|          |     |          |        | eth0 10.1.1.2  |    |tun0 192.168.1.2|          |     |          |
|        +----------------+    +----------------+          |     |          |        +----------------+    +----------------+          |     |          |
|              |                         |                 |     |          |             | 9    | 16                |                 |     |          |
|              | 8                       +-----------------+     |          |             |      |                   +-----------------+     |          |
|              |                                                 |          |             |      |                                           |          |
+--------------|-------------------------------------------------+          +-------------|------|--------------------------------------------+         |
               |                                                                          |      |                                                      |
               +-------------------------------Physical Network---------------------------+      +-----------------Physical Network---------------------+



流程如下：

1. Web Browser 发出包目的ip为 1.1.1.1
2. 到达内核网络协议栈之后，通过查路由发现需要查询路由表 51820，路由表 51820 指示将数据包发送给 tun0 网卡
3. tun0 网卡将数据包发送给 wireguard-go
4. wireguard-go 检查 allowed ip，发现目的 ip 在 allowed ip 中（目的 ip 是 1.1.1.1，allowed ip 是 0.0.0.0/0），所以接受数据包，并按照 wireguard 协议的要求对数据包进行加密签名
5. wireguard-go 将数据包封装成 UDP/IP 包，并将 udp header 中的目的端口设置为 2345，将 ip header 中的目的IP设置为 10.1.1.2
6. wireguard-go 把数据包打上 51820 标志（笔者注：这里没看懂的请参考上一篇文章 【WireGuard 白皮书带读 15】番外篇：Wireguard 中的路由）然后扔给 socket B，socket B 将数据包送到内核网络协议栈
7. 到达内核网络协议栈之后，通过查路由发现需要从 eth0 网卡出去
8. 通过物理网络，数据包到达了服务端的物理网卡 eth0，将外层的 IP 头去掉之后，将数据包送到内核网络协议栈。
9. 到达内核网络协议栈之后，通过查路由发现需要发送给虚拟网卡 tun0
10. wireguard-go 检查 allowed ip，发现源 ip 在 allowed ip 中（源 ip 是 192.168.1.1，allowed ip 是 192.168.1.1/32），所以接受数据包，并按照 wireguard 协议的要求对数据包进行验签解密
11. wireguard-go 将数据包送到内核网络协议栈
12. 到达内核网络协议栈之后，通过查路由发现需要从 eth0 网卡出去
13. 后续的流程是 1.1.1.1 返回的 response 包依次经过服务端 eth0、服务端网络协议栈、服务端 tun0、服务端 wireguard、服务端 Socket C、服务端网络协议栈、服务端 eth0、客户端 eth0、客户端网络协议栈、客户端 tun0、客户端 wireguard-go、客户端 Socket B、客户端网络协议栈、客户端 Socket A，最终回到了 Web Browser 这个应用层进程。






路由命令：
	route -n
	ip route ls
	iptables-save > /etc/iptables/rules.v4
	
root@VM-0-2-debian:~# cat /etc/network/if-pre-up.d/iptables
#!/bin/bash
/sbin/iptables-restore < /etc/iptables/rules.v4

</file>